<?xml version="1.0" encoding="UTF-8"?>
<sml:SensorML xmlns:sml="http://www.opengis.net/sensorML" xmlns:swe="http://www.opengis.net/swe" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xlink="http://www.w3.org/1999/xlink" xsi:schemaLocation="http://www.opengis.net/sensorML http://vast.uah.edu/schemas/sensorML/1.0.30/base/sensorML.xsd" version="1.0">
   <sml:ProcessChain id="PROCESS_CHAIN">
      <!--~~~~~~~~~~~~~~~~~~-->
      <!-- Inputs & Outputs -->
      <!--~~~~~~~~~~~~~~~~~~-->
      <sml:inputs>
         <sml:InputList>
            <sml:input name="time">
               <swe:Time definition="urn:ogc:def:phenomenon:time" uom="s" referenceTimeFrame="urn:ogc:def:crs:julianTime"/>
            </sml:input>
         </sml:InputList>
      </sml:inputs>
      <sml:outputs>
         <sml:OutputList>
            <sml:output name="sampleLocation">
               <swe:Vector definition="urn:ogc:def:data:locationVector" referenceFrame="urn:ogc:def:crs:epsg4329">
                  <swe:coordinate name="latitude">
                     <swe:Quantity definition="urn:ogc:def:phenomenon:latitude" uom="urn:ogc:def:unit:degree"/>
                  </swe:coordinate>
                  <swe:coordinate name="longitude">
                     <swe:Quantity definition="urn:ogc:def:phenomenon:longitude" uom="urn:ogc:def:unit:degree"/>
                  </swe:coordinate>
                  <swe:coordinate name="altitude">
                     <swe:Quantity definition="urn:ogc:def:phenomenon:altitude" uom="urn:ogc:def:unit:meter"/>
                  </swe:coordinate>
               </swe:Vector>
            </sml:output>            
         </sml:OutputList>
      </sml:outputs>
      <sml:processes>
         <sml:ProcessList>
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <!-- Orbital Position Matrix -->
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <sml:process name="orbitPosMatrix" xlink:href="./Orbital_Positioning.xml#PROCESS_CHAIN"/>
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <!-- Ray Intersection with Ellipsoid -->
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <sml:process name="rayIntersect">
               <sml:ProcessModel>
                  <sml:inputs>
                     <sml:InputList>
                        <sml:input name="ecefPosition">
                           <swe:DataArray definition="urn:ogc:def:data:positionMatrix" arraySize="16">
                              <swe:component>
                                 <swe:Quantity/>
                              </swe:component>
                           </swe:DataArray>
                        </sml:input>
                        <sml:input name="rayDirection">
                           <swe:Vector definition="urn:ogc:def:data:vector">
                              <swe:coordinate name="x">
                                 <swe:Quantity definition="urn:ogc:def:phenomenon:distance">0</swe:Quantity>
                              </swe:coordinate>
                              <swe:coordinate name="y">
                                 <swe:Quantity definition="urn:ogc:def:phenomenon:distance">0</swe:Quantity>
                              </swe:coordinate>
                              <swe:coordinate name="z">
                                 <swe:Quantity definition="urn:ogc:def:phenomenon:distance">-1</swe:Quantity>
                              </swe:coordinate>
                           </swe:Vector>
                        </sml:input>
                     </sml:InputList>
                  </sml:inputs>
                  <sml:outputs>
                     <sml:OutputList>
                        <sml:output name="intersection">
                           <swe:Vector definition="urn:ogc:def:data:locationVector" referenceFrame="urn:ogc:def:crs:ecef:wgs84">
                              <swe:coordinate name="x">
                                 <swe:Quantity definition="urn:ogc:def:phenomenon:distance" uom="urn:ogc:def:unit:meter"/>
                              </swe:coordinate>
                              <swe:coordinate name="y">
                                 <swe:Quantity definition="urn:ogc:def:phenomenon:distance" uom="urn:ogc:def:unit:meter"/>
                              </swe:coordinate>
                              <swe:coordinate name="z">
                                 <swe:Quantity definition="urn:ogc:def:phenomenon:distance" uom="urn:ogc:def:unit:meter"/>
                              </swe:coordinate>
                           </swe:Vector>
                        </sml:output>
                     </sml:OutputList>
                  </sml:outputs>
                  <sml:method xlink:href="urn:ogc:def:process:rayIntersectEllipsoid:1.0"/>
               </sml:ProcessModel>
            </sml:process>
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <!-- ECEF to LLA coordinate transform -->
            <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
            <sml:process name="ecefToLLA">
               <sml:ProcessModel>
                  <sml:inputs>
                     <sml:InputList>
                        <sml:input name="ecefLocation">
                           <swe:Vector definition="urn:ogc:def:data:locationVector" referenceFrame="urn:ogc:def:crs:ecef:wgs84">
                              <swe:coordinate name="x">
                                 <swe:Quantity definition="urn:ogc:def:phenomenon:distance" uom="urn:ogc:def:unit:meter"/>
                              </swe:coordinate>
                              <swe:coordinate name="y">
                                 <swe:Quantity definition="urn:ogc:def:phenomenon:distance" uom="urn:ogc:def:unit:meter"/>
                              </swe:coordinate>
                              <swe:coordinate name="z">
                                 <swe:Quantity definition="urn:ogc:def:phenomenon:distance" uom="urn:ogc:def:unit:meter"/>
                              </swe:coordinate>
                           </swe:Vector>
                        </sml:input>
                     </sml:InputList>
                  </sml:inputs>
                  <sml:outputs>
                     <sml:OutputList>
                        <sml:output name="llaLocation">
                           <swe:Vector definition="urn:ogc:def:data:locationVector" referenceFrame="urn:ogc:def:crs:epsg4329">
                              <swe:coordinate name="latitude">
                                 <swe:Quantity definition="urn:ogc:def:phenomenon:latitude" uom="urn:ogc:def:unit:degree"/>
                              </swe:coordinate>
                              <swe:coordinate name="longitude">
                                 <swe:Quantity definition="urn:ogc:def:phenomenon:longitude" uom="urn:ogc:def:unit:degree"/>
                              </swe:coordinate>
                              <swe:coordinate name="altitude">
                                 <swe:Quantity definition="urn:ogc:def:phenomenon:altitude" uom="urn:ogc:def:unit:meter"/>
                              </swe:coordinate>
                           </swe:Vector>
                        </sml:output>
                     </sml:OutputList>
                  </sml:outputs>
                  <sml:method xlink:href="urn:ogc:def:process:ECEFToLLA:1.0"/>
               </sml:ProcessModel>
            </sml:process>
         </sml:ProcessList>
      </sml:processes>
      <!--~~~~~~~~~~~~~-->
      <!-- Connections -->
      <!--~~~~~~~~~~~~~-->
      <sml:connections>
         <sml:ConnectionList>
            <!-- Time and scanIndex inputs -->
            <sml:connection>
               <sml:Link>
                  <sml:source ref="this/inputs/time"/>
                  <sml:destination ref="orbitPosMatrix/inputs/julianTime"/>
               </sml:Link>
            </sml:connection>
            <!-- Ellipsoid Intersection -->
            <sml:connection>
               <sml:Link>
                  <sml:source ref="orbitPosMatrix/outputs/ecefPositionMatrix"/>
                  <sml:destination ref="rayIntersect/inputs/ecefPosition"/>
               </sml:Link>
            </sml:connection>
            <sml:connection>
               <sml:Link>
                  <sml:source ref="rayIntersect/outputs/intersection"/>
                  <sml:destination ref="ecefToLLA/inputs/ecefLocation"/>
               </sml:Link>
            </sml:connection>
            <sml:connection>
               <sml:Link>
                  <sml:source ref="ecefToLLA/outputs/llaLocation"/>
                  <sml:destination ref="this/outputs/sampleLocation"/>
               </sml:Link>
            </sml:connection>
         </sml:ConnectionList>
      </sml:connections>
   </sml:ProcessChain>
</sml:SensorML>
